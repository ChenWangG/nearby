// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef presence_bindings_h
#define presence_bindings_h

/**
 * Warning, this file is autogenerated by cbindgen. Don't modify this manually.
 */

#include "presence_data.h"


typedef enum PresenceIdentityType {
  Private = 0,
  Trusted,
  Public,
} PresenceIdentityType;

typedef enum PresenceMeasurementAccuracy {
  Unknown = 0,
  CoarseAccuracy,
  BestAvailable,
} PresenceMeasurementAccuracy;

typedef struct PresenceBleScanResult PresenceBleScanResult;

typedef struct PresenceBleScanResultBuilder PresenceBleScanResultBuilder;

/**
 * Struct to send a discovery request to the Engine.
 */
typedef struct PresenceDiscoveryRequest PresenceDiscoveryRequest;

typedef struct PresenceDiscoveryRequestBuilder PresenceDiscoveryRequestBuilder;

typedef struct PresenceEngine PresenceEngine;

typedef void (*PresenceDiscoveryCallback)(PresenceDiscoveryResult*);

typedef void (*PresenceStartBleScan)(PresenceBleScanRequest*);

struct PresenceEngine *presence_engine_new(PresenceDiscoveryCallback presence_discovery_callback,
                                           PresenceStartBleScan presence_start_ble_scan);

void presence_engine_run(struct PresenceEngine *engine);

void presence_engine_set_request(struct PresenceEngine *engine,
                                 struct PresenceDiscoveryRequest *request);

void presence_ble_scan_callback(struct PresenceEngine *engine,
                                struct PresenceBleScanResult *scan_result);

struct PresenceDiscoveryRequestBuilder *presence_request_builder_new(int32_t priority);

void presence_request_builder_add_condition(struct PresenceDiscoveryRequestBuilder *builder,
                                            int32_t action,
                                            enum PresenceIdentityType identity_type,
                                            enum PresenceMeasurementAccuracy measurement_accuracy);

struct PresenceDiscoveryRequest *presence_request_builder_build(struct PresenceDiscoveryRequestBuilder *builder);

struct PresenceBleScanResultBuilder *presence_ble_scan_result_builder_new(int32_t priority);

void presence_ble_scan_result_builder_add_action(struct PresenceBleScanResultBuilder *builder,
                                                 int32_t action);

struct PresenceBleScanResult *presence_ble_scan_result_builder_build(struct PresenceBleScanResultBuilder *builder);

void presence_request_debug_print(const struct PresenceDiscoveryRequest *request);

#endif /* presence_bindings_h */
